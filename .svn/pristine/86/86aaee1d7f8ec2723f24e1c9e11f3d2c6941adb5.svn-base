#!/usr/bin/env python
#coding:utf-8

import tornado
import tornado.ioloop
import tornado.web
from tornado.options import define,options
import os
from handlers.Handlers import *
from config.settings import websettings
import tornado.httpserver
from app.dbWrapper import dbWrapper

define("port", default=80, help="run on the given port", type=int)

class Application(tornado.web.Application):

    def __init__(self):
        handlers = [
            (r'/',mainHandler),
            (r'/rent/?',rentHandler),
            (r'/host/?',hostHandler),
            (r'/contact/?',contactHandler),
            (r'/slt/?',solutionHandler),
            (r'/visit/?',vistHandler),
            (r'/news/(\d+)',newsHandler),
            (r'/as-service/?',asServiceHandler),
            (r'/service-contract/?',serviceContractHandler),
            (r'/activities/?',activitiesHandler),
            (r'/checkcaptcha/?', checkCaptchaHandler),
            (r'/captcha/?', captchaHandler),
            (r'/admin/?',adminLoginHandler),
            (r'/admin/overview/?',adminOverviewHandler),
            (r'/admin/all-machines/?',adminAllMahcinesHandler),
            (r'/admin/machines/?',adminMachinesHandler),#use to add the machine data
            (r'/admin/orders/?',adminOrdersHandler),
            (r'/admin/redict/?',adminRedirectHandler),
            (r'/admin/removems/?tid=(\d+)',removeMachineHandler),
            (r'/admin/order/modify/?',adminOrdersModifyHandler),
            (r'/quit/?', quitHandler),
        ]
        super(Application, self).__init__(handlers,**websettings)
        self.db = dbWrapper()

		
if __name__ == '__main__':
    tornado.options.parse_command_line()
    http_server = tornado.httpserver.HTTPServer(Application())
    http_server.listen(options.port)
    tornado.ioloop.IOLoop.instance().start()
